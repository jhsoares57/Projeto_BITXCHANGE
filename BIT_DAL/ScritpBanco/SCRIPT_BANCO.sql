CREATE DATABASE PIM4
GO
USE PIM4

GO
CREATE TABLE TB_USUARIO
(USU_INT_ID INT PRIMARY KEY IDENTITY,
USU_STR_NOME VARCHAR (100),
USU_STR_CPF CHAR(15),
USU_DT_DTNASCIMENTO DATE,
USU_STR_SEXO CHAR(1),
USU_STR_EMAIL VARCHAR (50),
USU_STR_SENHA VARCHAR(MAX),
USU_STR_STATUS CHAR(1),--P - PENDENTE; A - ATIVO;
USU_STR_TIPO CHAR(1),
USU_DT_DTCADASTRO DATETIME
)


GO
INSERT INTO TB_USUARIO(USU_STR_NOME,USU_STR_CPF,USU_DT_DTNASCIMENTO,USU_STR_SEXO,USU_STR_EMAIL,USU_STR_SENHA,USU_STR_STATUS,USU_STR_TIPO,USU_DT_DTCADASTRO)
VALUES('Jos� Hugo Soares de barros','000.000.001-91','2020-04-13','M','jhsoares57@gmail.com','2c2c2c2c2c2c2c2c2c2c2c2c2c2c2c2c','1','1','2020-09-07')

/*
Procedure para validar se o usu�rio existe e realizar login no sistema

autor: Jos� Hugo Soares de Barros
Data: 18/09/2020

Manuten��o:
Data: 20/09/2020 Autor: Hugo Descri��o: Ajuste para retornar o tipo do usu�rio
Data: 20/09/2020 Autor: Hugo Descri��o: Ajuste para remover o filtro do tipo do usu�rio
*/
GO
CREATE PROCEDURE USP_USUARIOS_SEL
@LOGIN VARCHAR(50),
@SENHA VARCHAR(100)
AS
BEGIN
	SELECT USU_INT_ID, USU_STR_NOME, USU_STR_SENHA,USU_STR_EMAIL,USU_STR_TIPO
	FROM TB_USUARIO
	WHERE USU_STR_EMAIL = @LOGIN AND USU_STR_SENHA = @SENHA
END


/*
Procedure para inserir usu�rio

autor: Jos� Hugo Soares de Barros
Data: 18/09/2020

Manuten��o:
Data: 25/10/2020 autor: Luis Suzuki Descrição: criação de carteira para usuário mobile

*/
GO
CREATE PROCEDURE [dbo].[USP_USUARIO_INSERT]
@NOME VARCHAR(100),
@CPF CHAR(15),
@DTNASCIMENTO DATE,
@SEXO CHAR(1),
@EMAIL VARCHAR(50),
@SENHA VARCHAR(MAX),
@STATUS CHAR(1),--P - PENDENTE; A - ATIVO;
@TIPO CHAR(1),
@DTCADASTRO DATETIME,
@ID_OUT INT OUTPUT

AS
BEGIN TRY
    DECLARE @CAR_ID INT
    DECLARE @cnt INT = 0
    DECLARE @MOE_ID INT
    INSERT INTO TB_USUARIO(USU_STR_NOME,USU_STR_CPF,USU_DT_DTNASCIMENTO,USU_STR_SEXO,USU_STR_EMAIL,USU_STR_SENHA,USU_STR_STATUS,USU_STR_TIPO,USU_DT_DTCADASTRO)
    VALUES(@NOME,@CPF,@DTNASCIMENTO,@SEXO,@EMAIL,@SENHA,@STATUS,@TIPO,@DTCADASTRO)
    SET @ID_OUT = (SELECT SCOPE_IDENTITY())

    IF (@ID_OUT>0 AND @TIPO=2)
    BEGIN
        INSERT INTO TB_CARTEIRA(USU_INT_ID)
        VALUES(@ID_OUT)
    
        SET @CAR_ID = (SELECT MAX(CAR_INT_ID) FROM TB_CARTEIRA)
        SET @MOE_ID = (SELECT MIN(MOE_INT_ID) from TB_MOEDA)

        WHILE (@cnt < 4 AND @ID_OUT>0 AND @TIPO=2)
        BEGIN
            INSERT INTO TB_MOEDA_CARTEIRA(CAR_INT_ID, MOE_INT_ID, MC_DEC_SALDO)
            VALUES(@CAR_ID, @MOE_ID, 0)
            SET @cnt = @cnt + 1
            SET @MOE_ID = @MOE_ID + 1
	        IF((SELECT MAX(MOE_INT_ID) FROM TB_MOEDA_CARTEIRA WHERE CAR_INT_ID= @CAR_ID) < 4)
	        CONTINUE
            ELSE
	        BREAK
        END
    END    
END TRY

BEGIN CATCH
    SELECT   
        ERROR_NUMBER() AS ErrorNumber  
        ,ERROR_SEVERITY() AS ErrorSeverity  
        ,ERROR_STATE() AS ErrorState  
        ,ERROR_PROCEDURE() AS ErrorProcedure  
        ,ERROR_LINE() AS ErrorLine  
        ,ERROR_MESSAGE() AS ErrorMessage;
END CATCH

RETURN @ID_OUT
GO

/****************************************
Procedure para listar todos os usu�rio

autor: Jos� Hugo Soares de Barros
Data: 18/09/2020

Manuten��o:

*****************************************/
GO
CREATE PROCEDURE USP_LEVANTAR_USER
AS
BEGIN
SELECT USU_INT_ID AS [C�DIGO],USU_STR_NOME AS [NOME],USU_STR_CPF AS [CPF],USU_STR_EMAIL AS [EMAIL] FROM TB_USUARIO
END

/*
Procedure para filtrar usu�rio de acordo com o nome usando like

autor: Jos� Hugo Soares de Barros
Data: 18/09/2020

Manuten��o:

*/
GO
CREATE PROCEDURE USP_FILTRAR_USER
@NOME VARCHAR(100)
AS
BEGIN
SELECT USU_INT_ID AS [C�DIGO],USU_STR_NOME AS [NOME],USU_STR_CPF AS [CPF],USU_STR_EMAIL AS [EMAIL] FROM TB_USUARIO where (USU_STR_NOME like'%'+@Nome+'%')
END


/*
Procedure para levantar usu�rio de acordo com ID

autor: Jos� Hugo Soares de Barros
Data: 18/09/2020

Manuten��o:

*/
GO
CREATE PROCEDURE USP_LEVANTAR_USER_EDITAR
@ID INT
AS
BEGIN
SELECT USU_INT_ID ,USU_STR_NOME,USU_STR_CPF,USU_DT_DTNASCIMENTO,USU_STR_SEXO,USU_STR_EMAIL,USU_STR_SENHA,USU_STR_STATUS,USU_STR_TIPO,USU_DT_DTCADASTRO FROM TB_USUARIO WHERE USU_INT_ID = @ID
END


/*
Procedure para atualizar cliente

autor: Jos� Hugo Soares de Barros
Data: 18/09/2020

Manuten��o:

*/
GO
ALTER PROCEDURE USP_USUARIO_UPDATE
@ID INT,
@NOME VARCHAR (100),
@CPF CHAR(15),
@DTNASCIMENTO DATE,
@SEXO CHAR(1),
@EMAIL VARCHAR (50),
@SENHA VARCHAR(MAX),
@STATUS CHAR(1),--P - PENDENTE; A - ATIVO;
@TIPO CHAR(1),
@DTCADASTRO DATETIME,
@ID_OUT INT OUTPUT
AS
BEGIN
UPDATE TB_USUARIO SET USU_STR_NOME=@NOME,USU_STR_CPF=@CPF,USU_DT_DTNASCIMENTO=@DTNASCIMENTO,USU_STR_SEXO=@SEXO,USU_STR_EMAIL=@EMAIL,USU_STR_SENHA=@SENHA,USU_STR_STATUS=@STATUS,USU_STR_TIPO=@TIPO,USU_DT_DTCADASTRO=@DTCADASTRO WHERE USU_INT_ID = @ID
SET @ID_OUT = @ID
RETURN @ID_OUT
END

GO
CREATE TABLE TB_MOEDA
(MOE_INT_ID INT PRIMARY KEY IDENTITY,
MOE_STR_DESC VARCHAR(20),
MOE_STR_SIGLA VARCHAR(5),
MOE_STR_VALOR DECIMAL (9,2)
)

GO
INSERT INTO TB_MOEDA(MOE_STR_DESC,MOE_STR_SIGLA,MOE_STR_VALOR) 
VALUES ('BITCOIN','B',0.00),
		('REAL','R$',0.00),
		('ETHERUN','ETH',0.00),
		('DOLAR','USD',0.00)

GO
CREATE TABLE TB_TRANSFERENCIA
(TRA_INT_ID INT PRIMARY KEY IDENTITY,
TRA_STR_DESC VARCHAR(70),
TRA_DOU_VALOR DECIMAL(9,2),
TRA_DT_DATATRANS DATE,
TRA_STR_PROTOCOLO VARCHAR(15),
MOE_INT_ID INT,
USU_INT_ID INT
)
go
ALTER TABLE TB_TRANSFERENCIA ADD  CONSTRAINT TB_MOEDA_FK_ID FOREIGN KEY (MOE_INT_ID) REFERENCES TB_MOEDA (MOE_INT_ID);
ALTER TABLE TB_TRANSFERENCIA ADD  CONSTRAINT TB_USUARIO_FK_ID FOREIGN KEY (USU_INT_ID) REFERENCES TB_USUARIO (USU_INT_ID);

go
INSERT INTO TB_TRANSFERENCIA (TRA_STR_DESC,TRA_DOU_VALOR,TRA_DT_DATATRANS,MOE_INT_ID,USU_INT_ID)
VALUES
('TESTE HUGO',200.00,'2020-09-09',1,1),
('TESTE HUGO 123',30.00,'2020-09-10',2,1),
('TESTE HUGO 321',100.00,'2020-09-11',3,1),
('TESTE HUGO 789',100.00,'2020-09-12',4,1)


GO
CREATE TABLE TB_COTACAO
(
COT_INT_ID INT PRIMARY KEY IDENTITY,
COT_DT_COTA DATE,
COT_DEC_VALORCOT DECIMAL(9,2),
MOE_INT_ID INT
)
GO
ALTER TABLE TB_COTACAO ADD  CONSTRAINT TB_MOED_FK_ID FOREIGN KEY (MOE_INT_ID) REFERENCES TB_MOEDA (MOE_INT_ID);


INSERT INTO TB_COTACAO 
VALUES
('2020-09-18',03.00,1),
('2020-09-18',04.00,2),
('2020-09-18',07.00,3),
('2020-09-18',03.50,4)



/*
Procedure para listar opera��es de acordo com unica data

autor: Jos� Hugo Soares de Barros
Data: 18/09/2020

Manuten��o:
Data: 25/09/2020 autor: José Hugo Descrição: Ajustado para realizar buscas na view de transações
Data: 25/09/2020 autor: José Hugo Descrição: Adicionadao campo de protocolo
*/
go
CREATE PROCEDURE USP_RELATORIO_TRANSACOES
@DATAINCIAL DATETIME
AS
BEGIN
SELECT [DATA] as [Data Transf�rencia],TR.PROTOCOLO AS [Protocolo],USU_STR_NOME as [Nome usu�rio],'TRANSFERENCIA' as [Tipo],VALOR as [Valor],MOE_STR_SIGLA as [Moeda]  FROM VW_TRANSACOES TR
INNER JOIN TB_USUARIO USU ON USU.USU_INT_ID = TR.USUARIO
INNER JOIN TB_MOEDA M ON M.MOE_INT_ID = TR.MOEDA
WHERE [DATA] = @DATAINCIAL
END

/*
Procedure para listar opera��es de acordo com data inicial e final

autor: Jos� Hugo Soares de Barros
Data: 18/09/2020

Manuten��o:
Data: 25/09/2020 autor: José Hugo Descrição: Ajustado para realizar buscas na view de transações
Data: 25/09/2020 autor: José Hugo Descrição: Adicionadao campo de protocolo

*/
go
CREATE PROCEDURE USP_RELATORIO_TRANSACOES_MENSAL
@DATAINCIAL DATETIME,
@DATAFINAL DATETIME
AS
BEGIN
SELECT [DATA] as [Data Transf�rencia],TR.PROTOCOLO AS [Protocolo],USU_STR_NOME as [Nome usu�rio],'TRANSFERENCIA' as [Tipo],VALOR as [Valor],MOE_STR_SIGLA as [Moeda]  FROM VW_TRANSACOES TR
INNER JOIN TB_USUARIO USU ON USU.USU_INT_ID = TR.USUARIO
INNER JOIN TB_MOEDA M ON M.MOE_INT_ID = TR.MOEDA
WHERE [DATA] BETWEEN @DATAINCIAL and @DATAFINAL
END


/*
Procedure para carregar as ultimas 100 transa��es realizadas

autor: Jos� Hugo Soares de Barros
Data: 18/09/2020

Manuten��o:
Data: 25/09/2020 autor: José Hugo Descrição: Ajustado para realizar buscas na view de transações
Data: 25/09/2020 autor: José Hugo Descrição: Adicionadao campo de protocolo
*/
go
CREATE PROCEDURE USP_ULTIMAS_TRANSACOES
AS
BEGIN
SELECT TOP 100 [DATA] as [Data Transf�rencia],TR.PROTOCOLO AS [Protocolo],USU_STR_NOME as [Nome usu�rio],'TRANSFERENCIA' as [Tipo],VALOR as [Valor],MOE_STR_SIGLA as [Moeda]  FROM VW_TRANSACOES TR
INNER JOIN TB_USUARIO USU ON USU.USU_INT_ID = TR.USUARIO
INNER JOIN TB_MOEDA M ON M.MOE_INT_ID = TR.MOEDA
END

/*
Procedure para listar cota��o das moedas

autor: Jos� Hugo Soares de Barros
Data: 18/09/2020

Manuten��o:

*/
GO
CREATE PROCEDURE USP_LEVANTAR_COTACAO_MOEDA
AS
BEGIN
SELECT COT_DEC_VALORCOT,MOE_INT_ID FROM TB_COTACAO
END


GO
CREATE TABLE TB_CARTEIRA
(CAR_INT_ID INT PRIMARY KEY IDENTITY,
USU_INT_ID INT)
GO
ALTER TABLE TB_CARTEIRA ADD  CONSTRAINT FK_USUARIO_CARTEIRA FOREIGN KEY (USU_INT_ID) REFERENCES TB_USUARIO (USU_INT_ID);

GO
CREATE TABLE TB_DEPOSITO
(
DEP_INT_ID INT PRIMARY KEY IDENTITY,
DEP_STR_TIPO CHAR(1), --1 - Boleto; 2 - Cartão
DEP_STR_TITULAR VARCHAR(50),
DEP_DT_DTVENC DATE,
DEP_STR_NUMCARTAO VARCHAR(20),
DEP_STR_CVV CHAR(3),
DEP_DT_DTPAG DATE,
DEP_DOU_VALOR DECIMAL(9,2),
DEP_STR_STATUS CHAR(1),
CAR_INT_ID INT,
DEP_STR_PROTOCOLO VARCHAR(15))
GO
ALTER TABLE TB_DEPOSITO ADD  CONSTRAINT FK_CARTEIRA_DEPOSITO FOREIGN KEY (CAR_INT_ID) REFERENCES TB_CARTEIRA (CAR_INT_ID);

/*
View para unir as transa��es realizadas

autor: Jos� Hugo Soares de Barros
Data: 22/09/2020

Manuten��o:

*/
go
ALTER VIEW VW_TRANSACOES
AS
SELECT USU.USU_INT_ID AS [USUARIO], 
TR.TRA_STR_PROTOCOLO AS [PROTOCOLO],
TRA_DT_DATATRANS AS [DATA],'TRANSFERENCIA' AS [TIPO],
TRA_DOU_VALOR AS [VALOR],
M.MOE_INT_ID AS [MOEDA]  
FROM TB_TRANSFERENCIA TR
INNER JOIN TB_USUARIO USU ON USU.USU_INT_ID = TR.USU_INT_ID
INNER JOIN TB_MOEDA M ON M.MOE_INT_ID = TR.MOE_INT_ID

UNION ALL

SELECT  USU.USU_INT_ID AS [USUARIO],
DEP_STR_PROTOCOLO AS [PROTOCOLO],
DEP_DT_DTPAG AS [DATA],
CASE WHEN DEP_STR_TIPO = 1 THEN 'DEPOSITO - BOLETO' ELSE 'DEPOSITO - CART�O' END AS [TIPO],
DEP_DOU_VALOR AS [VALOR],2 AS [MOEDA]
 FROM TB_DEPOSITO DEP
INNER JOIN TB_CARTEIRA CAR ON CAR.CAR_INT_ID = DEP.CAR_INT_ID
INNER JOIN TB_USUARIO USU ON USU.USU_INT_ID = CAR.CAR_INT_ID


/*
PROCEDURE PARA LEVANTAR TRANSA��ES DO USUARIO

autor: Jos� Hugo Soares de Barros
Data: 23/09/2020

Manuten��o:

Data: 25/09/2020 autor: José Hugo Descrição, ajuste para buscar a sigla da moeda
Data: 28/10/2020 autor: José Hugo Descrição, adicionado order by na data de cadastro

*/
GO
CREATE PROCEDURE USP_EXTRATO_USUARIO
@USUARIO INT
AS
BEGIN
SELECT VW.DATA,VW.PROTOCOLO,VW.TIPO,VW.VALOR,M.MOE_STR_DESC AS [MOEDA] FROM VW_TRANSACOES VW
INNER JOIN TB_MOEDA M on M.MOE_INT_ID = VW.MOEDA
 WHERE USUARIO = @USUARIO
 ORDER BY VW.DATA DESC
END

/*
PROCEDURE PARA LEVANTAR TRANSAÇÔES DO USUARIO

autor: Jos� Hugo Soares de Barros
Data: 12/10/2020

Manuten��o:
Data: 28/10/2020 autor: José Hugo Descrição, adicionado order by na data de cadastro

*/
GO
CREATE PROCEDURE USP_EXTRATO_USUARIO_3
@USUARIO INT
AS
BEGIN
SELECT TOP 3 VW.DATA,VW.PROTOCOLO,VW.TIPO,VW.VALOR,M.MOE_STR_DESC AS [MOEDA] FROM VW_TRANSACOES VW
INNER JOIN TB_MOEDA M on M.MOE_INT_ID = VW.MOEDA
 WHERE USUARIO = @USUARIO
 ORDER BY VW.DATA DESC
END

GO
CREATE TABLE TB_BACKUP
(
	BAC_INT_ID INT IDENTITY PRIMARY KEY,
	BC_DT_DATA DATETIME,
	BC_STR_DATABASE VARCHAR(30),
	BAC_STR_DIRETORIO VARCHAR(255),
	BAC_STR_STATUS CHAR(1),
	USU_INT_ID INT
)

ALTER TABLE TB_BACKUP ADD  CONSTRAINT FK_USUARIO_BACKUP FOREIGN KEY (USU_INT_ID) REFERENCES TB_USUARIO (USU_INT_ID);


/*
PROCEDURE PARA INSERIR DADOS DA GERAÇÃO DE BACKUP

autor: Jos� Hugo Soares de Barros
Data: 23/09/2020

Manuten��o:


*/
GO
CREATE PROCEDURE USP_INSERT_LOG_BACKUP
@DATA DATETIME,
@DATABASE VARCHAR(30),
@DIRETORIO VARCHAR(255),
@TATUS CHAR(1),
@USUARIO INT
AS
BEGIN
INSERT INTO TB_BACKUP VALUES (@DATA,@DATABASE,@DIRETORIO,@TATUS,@USUARIO)
END


/*
PROCEDURE PARA LISTAR OS ULTIMOS 20 BACKUPS EXECUTADOS

autor: José Hugo Soares de Barros
Data: 23/09/2020

Manutenção:


*/
GO
CREATE PROCEDURE USP_LISTAR_BACKUP
AS
BEGIN
SELECT TOP 20 U.USU_STR_NOME AS [USUARIO],B.BC_DT_DATA AS [DATA],B.BC_STR_DATABASE AS [BASE],B.BAC_STR_DIRETORIO AS [DIRETORIO],
CASE WHEN B.BAC_STR_STATUS = 'F' THEN 'FINALIZADO' ELSE 'ERRO' END AS [STATUS] FROM TB_BACKUP B
INNER JOIN TB_USUARIO U ON U.USU_INT_ID = B.USU_INT_ID
ORDER BY B.BAC_INT_ID DESC
END


GO
CREATE TABLE TB_MOEDA_CARTEIRA
(
	CAR_INT_ID INT,
	MOE_INT_ID INT,
	MC_DEC_SALDO DECIMAL (9,2)
)
GO
ALTER TABLE TB_MOEDA_CARTEIRA ADD  CONSTRAINT TB_MOEDA_CARTEIRA_CAR_ID_FK FOREIGN KEY (CAR_INT_ID) REFERENCES TB_CARTEIRA (CAR_INT_ID);
ALTER TABLE TB_MOEDA_CARTEIRA ADD  CONSTRAINT TB_MOEDA_CARTEIRA_MOE_ID_FK FOREIGN KEY (MOE_INT_ID) REFERENCES TB_MOEDA (MOE_INT_ID);

insert into TB_MOEDA_CARTEIRA 
values(1,1,'50.00'),
(1,2,'70.00'),
(1,3,'90.00'),
(1,4,'10.00')



/*
PROCEDURE PARA BUSCAR O SALDO DO USUARIO

autor: José Hugo Soares de Barros
Data: 14/10/2020

Manutenção:


*/
GO
CREATE PROCEDURE USP_SELECIONAR_CARTEIRA_USUARIO
@ID INT
AS
BEGIN
SELECT MC.MOE_INT_ID,MC.MC_DEC_SALDO FROM TB_CARTEIRA CAR 
INNER JOIN TB_MOEDA_CARTEIRA MC ON MC.CAR_INT_ID = CAR.CAR_INT_ID WHERE CAR.USU_INT_ID = @ID
END


/*
PROCEDURE INSERIRI TRANSFERENCIA

autor: José Hugo Soares de Barros
Data: 23/10/2020

Manutenção:


*/
GO
CREATE PROCEDURE USP_INSERIR_TRANSFERENCIA
@TRA_STR_DESC VARCHAR(70),
@TRA_DOU_VALOR DECIMAL(9,2),
@TRA_DT_DATATRANS DATE,
@TRA_STR_PROTOCOLO VARCHAR(15),
@MOE_INT_ID INT,
@USU_INT_ID INT,
@ID_OUT INT OUTPUT
AS
BEGIN
	INSERT INTO TB_TRANSFERENCIA (TRA_STR_DESC,TRA_DOU_VALOR,TRA_DT_DATATRANS,MOE_INT_ID,USU_INT_ID,TRA_STR_PROTOCOLO)
	VALUES(@TRA_STR_DESC,@TRA_DOU_VALOR,@TRA_DT_DATATRANS,@MOE_INT_ID,@USU_INT_ID,@TRA_STR_PROTOCOLO)
	SET @ID_OUT = (SELECT SCOPE_IDENTITY())
	RETURN @ID_OUT
END

/*
TRIGGER PARA DEBITAR O SALDO APÓS TRANSFERENCIA

autor: José Hugo Soares de Barros
Data: 23/10/2020

Manutenção:


*/

GO
CREATE TRIGGER DEBITAR_MOEDAR
ON TB_TRANSFERENCIA
FOR INSERT
AS
BEGIN
DECLARE 
@MOEDA INT,
@VALOR DECIMAL,
@USUARIO INT,
@CARTEIRA INT

--ATRIBUINDO VALOR QUE FOI INSERIDO NA TABELA DE TRANSFERENCIA
SELECT @MOEDA = MOE_INT_ID, @VALOR=TRA_DOU_VALOR,@USUARIO=USU_INT_ID FROM INSERTED
--SELECIONANDO A CARTEIRA DO USUARIO A PARTIR DO ID
SELECT @CARTEIRA = (SELECT CAR_INT_ID FROM TB_CARTEIRA WHERE USU_INT_ID=1)
--REALIZANDO UPDATE PARA ATUZALIAÇÃO DE SALDO
UPDATE TB_MOEDA_CARTEIRA SET MC_DEC_SALDO=(SELECT (MC_DEC_SALDO - @VALOR) FROM TB_MOEDA_CARTEIRA WHERE CAR_INT_ID=@CARTEIRA AND MOE_INT_ID=@MOEDA) WHERE CAR_INT_ID=@CARTEIRA AND MOE_INT_ID=@MOEDA

END